schema {
  query: RootQueryType
}

input PeakFilterElevation {
  isNil: Boolean
  eq: Int
  notEq: Int
  in: [Int!]
  lessThan: Int
  greaterThan: Int
  lessThanOrEqual: Int
  greaterThanOrEqual: Int
}

input PeakSortInput {
  order: SortOrder
  field: PeakSortField!
  scaledByUserInput: PeakScaledByUserFieldInput
}

input PeakFilterWikidataId {
  isNil: Boolean
  eq: String
  notEq: String
  in: [String]
  lessThan: String
  greaterThan: String
  lessThanOrEqual: String
  greaterThanOrEqual: String
}

input PeakFilterOsmId {
  isNil: Boolean
  eq: Int
  notEq: Int
  in: [Int!]
  lessThan: Int
  greaterThan: Int
  lessThanOrEqual: Int
  greaterThanOrEqual: Int
}

"A relay page info"
type PageInfo {
  "When paginating backwards, are there more items?"
  hasPreviousPage: Boolean!

  "When paginating forwards, are there more items?"
  hasNextPage: Boolean!

  "When paginating backwards, the cursor to continue"
  startCursor: String

  "When paginating forwards, the cursor to continue"
  endCursor: String
}

"A relay node"
interface Node {
  "A unique identifier"
  id: ID!
}

input PeakFilterScaleCount {
  isNil: Boolean
  eq: Int
  notEq: Int
  in: [Int]
  lessThan: Int
  greaterThan: Int
  lessThanOrEqual: Int
  greaterThanOrEqual: Int
}

input PeakFilterScaledByUser {
  input: PeakScaledByUserFieldInput
  isNil: Boolean
  eq: Boolean
  notEq: Boolean
  in: [Boolean!]
  lessThan: Boolean
  greaterThan: Boolean
  lessThanOrEqual: Boolean
  greaterThanOrEqual: Boolean
}

type RootQueryType {
  peaks(
    "How to sort the records in the response"
    sort: [PeakSortInput]

    "A filter to limit the results"
    filter: PeakFilterInput

    "The number of records to return from the beginning. Maximum 250"
    first: Int

    "Show records before the specified keyset."
    before: String

    "Show records after the specified keyset."
    after: String

    "The number of records to return to the end. Maximum 250"
    last: Int

    "Show only peaks scaled by the current actor (Not implemented yet)"
    scaledByActor: Boolean
  ): PeakConnection
  peak(
    "The id of the record"
    id: ID!
  ): Peak
}

input PeakFilterSlug {
  isNil: Boolean
  eq: String
  notEq: String
  in: [String!]
  lessThan: String
  greaterThan: String
  lessThanOrEqual: String
  greaterThanOrEqual: String
}

input PeakScaledByUserFieldInput {
  userId: ID!
}

type Peak implements Node {
  id: ID!
  name: String!
  slug: String!
  osmId: Int!
  latitude: Float!
  longitude: Float!
  elevation: Int!
  wikipedia: String
  wikidataId: String
  scaleCount: Int!
  scaledByUser(userId: ID!): Boolean
}

input PeakFilterWikipedia {
  isNil: Boolean
  eq: String
  notEq: String
  in: [String]
  lessThan: String
  greaterThan: String
  lessThanOrEqual: String
  greaterThanOrEqual: String
}

":peak edge"
type PeakEdge {
  "Cursor"
  cursor: String!

  ":peak node"
  node: Peak
}

":peak connection"
type PeakConnection {
  "Total count on all pages"
  count: Int

  "Page information"
  pageInfo: PageInfo!

  ":peak edges"
  edges: [PeakEdge]
}

input PeakFilterId {
  isNil: Boolean
  eq: ID
  notEq: ID
  in: [ID!]
  lessThan: ID
  greaterThan: ID
  lessThanOrEqual: ID
  greaterThanOrEqual: ID
}

enum SortOrder {
  DESC
  ASC
}

input PeakFilterLongitude {
  isNil: Boolean
  eq: Float
  notEq: Float
  in: [Float!]
  lessThan: Float
  greaterThan: Float
  lessThanOrEqual: Float
  greaterThanOrEqual: Float
}

input PeakFilterLatitude {
  isNil: Boolean
  eq: Float
  notEq: Float
  in: [Float!]
  lessThan: Float
  greaterThan: Float
  lessThanOrEqual: Float
  greaterThanOrEqual: Float
}

input PeakFilterName {
  isNil: Boolean
  eq: String
  notEq: String
  in: [String!]
  lessThan: String
  greaterThan: String
  lessThanOrEqual: String
  greaterThanOrEqual: String
}

input PeakFilterInput {
  and: [PeakFilterInput!]
  or: [PeakFilterInput!]
  id: PeakFilterId
  name: PeakFilterName
  slug: PeakFilterSlug
  osmId: PeakFilterOsmId
  latitude: PeakFilterLatitude
  longitude: PeakFilterLongitude
  elevation: PeakFilterElevation
  wikipedia: PeakFilterWikipedia
  wikidataId: PeakFilterWikidataId
  scaleCount: PeakFilterScaleCount
  scaledByUser: PeakFilterScaledByUser
}

enum PeakSortField {
  ID
  NAME
  SLUG
  OSM_ID
  LATITUDE
  LONGITUDE
  ELEVATION
  WIKIPEDIA
  WIKIDATA_ID
  SCALED_BY_USER
  SCALE_COUNT
}
