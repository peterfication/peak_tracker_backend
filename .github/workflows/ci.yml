name: CI

on: push

jobs:
  spellcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "yarn"
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: module-${{ hashFiles('yarn.lock') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
      - run: yarn spellcheck

  format-prettier:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "yarn"
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: module-${{ hashFiles('yarn.lock') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
      - run: yarn format:ci

  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: erlef/setup-beam@v1
        with:
          version-file: .tool-versions
          version-type: "strict"
      - name: Cache Elixir dependencies
        uses: actions/cache@v3
        with:
          path: |
            deps
            _build
            priv/plts
          key: deps-${{ hashFiles('mix.lock') }}
      - run: mix deps.get
      - run: mix format --check-formatted

  lint-yarn:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "yarn"
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: module-${{ hashFiles('yarn.lock') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
      - run: yarn lint

  lint-credo:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: erlef/setup-beam@v1
        with:
          version-file: .tool-versions
          version-type: "strict"
      - name: Cache Elixir dependencies
        uses: actions/cache@v3
        with:
          path: |
            deps
            _build
            priv/plts
          key: deps-${{ hashFiles('mix.lock') }}
      - run: mix deps.get
      - run: mix credo

  graphql-schema-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: erlef/setup-beam@v1
        with:
          version-file: .tool-versions
          version-type: "strict"
      - name: Cache Elixir dependencies
        uses: actions/cache@v3
        with:
          path: |
            deps
            _build
            priv/plts
          key: deps-${{ hashFiles('mix.lock') }}
      - run: mix deps.get
      - run: mix absinthe.schema.sdl --schema PeakTracker.Schema
      - name: Check that no changes exist
        run: |
          git status
          git diff-index --quiet HEAD --

  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
    env:
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/peak_tracker_dev
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - uses: erlef/setup-beam@v1
        with:
          version-file: .tool-versions
          version-type: "strict"
      - name: Cache Elixir dependencies
        uses: actions/cache@v3
        with:
          path: |
            deps
            _build
            priv/plts
          key: deps-test-${{ hashFiles('mix.lock') }}
      - run: mix deps.get
      - run: mix coveralls.json
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: excoveralls.json
          directory: cover
